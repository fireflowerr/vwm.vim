*vwm.vim.txt*
                                                                      *vwm.vim*

==============================================================================
CONTENTS                                                    *vwm.vim-contents*
  1. Commands...............................................|vwm.vim-commands|
  2. Configuration.....................................|vwm.vim-configuration|
  3. Examples...............................................|vwm.vim-examples|
==============================================================================
COMMANDS                                                    *vwm.vim-commands*

:VwmOpen {name}
  Opens the layout specified by {name}

:VwmClose {name}
  Closes the layout specified by {name}

:VwmToggle {name}
  Toggles the layout specified by {name}

:VwmRefresh
  Repopulates all layouts. Can be used to reformat all open layouts back to
  their original state.

:VwmReinit
  After manual changes to g:vwm#layouts, call to re-normalize the dictionary.

:VwmList
  Echos a message containing a list of all active layouts.

:VwmCloseAll
  Close all active layouts.
==============================================================================
CONFIGURATION                                          *vwm.vim-configuration*

g:vwm#safe_mode                                              *g:vwm#safe_mode*
  If true, adds an optimized VwmRefresh inbetween layout openings and
  closings. May cause a noticable drop in performance. Consider using this
  if you use many different layouts and find yourself running VwmRefresh
  often.

g:vwm#force_vert_first[default=0]                     *g:vwm#force_vert_first*
  Requires |g:vwm#safe_mode| = 1. If true force vertical nodes to overlay horizantal. See below for
  a visual
  example.
  NOTE: This may option may reduce performance as it necessarily causes two
    additional traversals over the layout tree.
          >

    g:vwm#force_vert_first = 0
    ____________________
    |     |            |
    |     |            |
    |win 3|            |
    |     |            |
    |     |            |
    |     |            |
    |------------------|
    |  win 1  | win 2  |
    |_________|________|

    g:vwm#force_vert_first = 1
    ____________________
    |     |            |
    |     |            |
    |win 3|            |
    |     |            |
    |     |            |
    |     |            |
    |     |------------|
    |     |win 1 |win 2|
    |_____|______|_____|

g:vwm#layouts                                                  *g:vwm#layouts*
  A list containing layouts accessible to this plugin. See |vwm-layouts| and
  |vwm-layouts-example|.
  NOTE: Windows are created from layouts using a depth first traversal of the
  layout definition. The order of depths traversed is as follows: left ->
  right -> top -> bot.
                                                            *vwm-layouts-root*
  Each layout consists of a root node and 1 or more child nodes, where each
  node is a dictionary. A root node contains the following attributes:

  {name}: The name of a layout definition. Used in |:VwmOpen| and |:VwmClose|

  {left}[opt]: Layouts originating from the left, relative or absolute.

  {right}[opt]: Layouts originating from the right, relative or absolute.

  {top}[opt]: Layouts originating from the top, relative or absolute.

  {bot}[opt]: Layouts originating from the bot, relative or absolute.

  {abs}[default=1]: If true, seed layouts from absolute position (as opposed
  to relative from the active window)

  {cache}[default=1]: If true, save buffers closed with |:VwmClose| and
  attempt to reuse cached buffer when |:VwmOpen| is next called.

  {opnBfr}[default=[]]: A list of commands or funcrefs to be executed before opening a
  given layout.

  {openAftr}[deault=[]]: A list of commands or funcrefs to be executed before opening
  a given layout.

  {clsBfr}[default=[]]: A list of commands or funcrefs to be executed before closing a
  given layout.

  {clsAftr}[deault=[]]: A list of commands or funcrefs to be executed before closing
  given layout.
                                                           *vwm-layouts-child*
  Each child node consists of itself and 0 more child nodes. A child node
  contains the following attributes.

  {init}: A list of commands to run on buffer creation. Accepts Strings and
  Funcrefs.

  {restore}[opt]: A list of commands to run on buffer restoration. Accepts Strings a
  nd
  Funcrefs.

  {sz}[opt]: The size of the window. Default to half of the current window.

  {left}[opt]: Layout left relative of this layout.

  {right}[opt]: Layout right relative of this layout.

  {top}[opt]: Layout top relative of this layout.

  {bot}[opt]: Layout bot relative of this layout.

  {focus}[default=0]: If true, this node's window will be focused at the end
  of layout realization.

  {set}[default=['bh=hide', 'nobl']]: A list of bufferlocal settings to apply.
  For more info see |hidden-options|

                                                           *vwm-layouts-float*
  Floating windows require a supporting version of neovim. Verify that
  `echo exists('*nvim_open_win')` is true. Each attribute may be lazily
  defined via funcref. Each floating layout contains the following
  attributes:
  NOTE: The values here are a simple wrapper around the parameters of
  |nvim_open_win()| .

  {x}[req]: The x coordinate to place the window corner defined by anchor.

  {y}[req]: The y coordinate to place the window corner defined by anchor.

  {width}[req]: The width of the floating window.

  {height}[req]: The height of the floating window.

  {relative}[default=editor]: Use the coordinate space of the editor or the
  current window. The other possible value is `win`.

  {focusable}[default=1]: If true, the floating window is focusable.

  {focus}[default=0]: If true, the floating window will be focused.

  {anchor}[default=NW]: The corner to place at coordinates (x, y). Other
  values include `NE`, `SW`, `SE`.

  {set}[default=['bh=hide', 'nobl']]: A list of bufferlocal settings to apply.
  For more info see |hidden-options| .

==============================================================================
EXAMPLES                                                    *vwm.vim-examples*
see https://github.com/paroxayte/vwm.vim#examples
